(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{357:function(n,t){n.exports={attributes:{title:"通过 Nginx 把网站改为 HTTPS 协议",date:"2022/03/28 10:58:00",updated:"2022/03/28 10:58:00",categories:["技术"],tags:["网站部署"]},html:'<p>填一下上次部署网站遗留的坑：如何使用 Nginx 安装 SSL 证书，从而使网站的协议由 http 变为 https</p>\n<h3>前期准备</h3>\n<ol>\n<li>首先，我们需要给我们的域名申请 SSL 证书，既有免费证书，也有付费证书，一般来讲免费证书就已经够用了，所以在这里只介绍免费证书的申请方法。<br>\n这里建议去<a href="https://homenew.console.aliyun.com/home/dashboard/ProductAndService">阿里云</a>或<a href="https://console.cloud.tencent.com/certoverview">腾讯云</a>申请证书（我选择的是腾讯云，所以下述步骤以腾讯云为准），申请步骤非常简单，只需要填上一些必要的信息（域名、邮箱等）就可以申请，大概 1-10 分钟就可以拿到证书啦。</li>\n<li>申请完成后我们可以在证书管理界面下载证书，下载的格式选择 Nginx，解压后可以得到四个文件:\n<ul>\n<li><code>plantsechi.top_bundle.crt</code> 证书文件</li>\n<li><code>plantsechi.top_bundle.pem</code> 证书文件（安装时可忽略该文件）</li>\n<li><code>plantsechi.top.key</code> 私钥文件</li>\n<li><code>plantsechi.top.csr</code> CSR 文件（安装时可忽略该文件）<br>\n其实安装证书的过程中真正用到的只有 <code>crt</code> 文件和 <code>key</code> 文件</li>\n</ul>\n</li>\n<li>有了证书之后我们需要把它们上传到服务器上，这里我使用的是 XFTP 进行文件上传。首先我们需要在 Nginx 的根目录新建一个文件夹存放证书，然后把两个文件放到该文件夹内。最终达到的效果：<code>/etc/nginx/cert</code> 中存放了 <code>plantsechi.top_bundle.crt</code> 和 <code>plantsechi.top.key</code> 两个文件。</li>\n</ol>\n<h3>Nginx 配置</h3>\n<p>进行完以上操作后，我们需要修改一下 Nginx 的配置，下面放出我的部分配置供参考：</p>\n<pre class="language-shell"><code class="language-shell">upstream webserver <span class="token punctuation">{</span>\n\t\tserver <span class="token number">127.0</span>.0.1:7070<span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n\n\tserver <span class="token punctuation">{</span>\n   \t\t\tlisten <span class="token number">443</span> ssl<span class="token punctuation">;</span>\n    \t\tserver_name plantsechi.top<span class="token punctuation">;</span> <span class="token comment">#域名</span>\n    \t\tssl_certificate  /etc/nginx/cert/plantsechi.top_bundle.crt<span class="token punctuation">;</span> <span class="token comment">#证书文件的路径</span>\n    \t\tssl_certificate_key /etc/nginx/cert/plantsechi.top.key<span class="token punctuation">;</span> <span class="token comment">#私钥文件的路径</span>\n    \t\tssl_session_timeout 5m<span class="token punctuation">;</span>\n   \t\t\tssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:<span class="token operator">!</span>NULL:<span class="token operator">!</span>aNULL:<span class="token operator">!</span>MD5:<span class="token operator">!</span>ADH:<span class="token operator">!</span>RC4<span class="token punctuation">;</span>\n    \t\tssl_protocols TLSv1.2 TLSv1.3<span class="token punctuation">;</span>\n    \t\tssl_prefer_server_ciphers on<span class="token punctuation">;</span>\n\n    \t\t<span class="token function">gzip</span>            on<span class="token punctuation">;</span>\n    \t\tgzip_types      text/plain application/xml text/css application/javascript<span class="token punctuation">;</span>\n    \t\tgzip_min_length <span class="token number">1000</span><span class="token punctuation">;</span>\n\n    \t\tlocation / <span class="token punctuation">{</span>\n        \t\t\texpires <span class="token variable">$expires</span><span class="token punctuation">;</span>\n        \t\t\tproxy_redirect                      off<span class="token punctuation">;</span>\n        \t\t\tproxy_set_header Host               <span class="token variable">$host</span><span class="token punctuation">;</span>\n        \t\t\tproxy_set_header X-Real-IP          <span class="token variable">$remote_addr</span><span class="token punctuation">;</span>\n        \t\t\tproxy_set_header X-Forwarded-For    <span class="token variable">$proxy_add_x_forwarded_for</span><span class="token punctuation">;</span>\n        \t\t\tproxy_set_header X-Forwarded-Proto  <span class="token variable">$scheme</span><span class="token punctuation">;</span>\n        \t\t\tproxy_read_timeout          1m<span class="token punctuation">;</span>\n        \t\t\tproxy_connect_timeout       1m<span class="token punctuation">;</span>\n        \t\t\tproxy_pass         http://webserver<span class="token punctuation">;</span> \n    \t\t<span class="token punctuation">}</span>\n\t<span class="token punctuation">}</span>\n\n</code></pre>\n<p>完成以上配置就可以通过 https 协议访问网站啦~但是还是有一些地方不太完美，如果在浏览器依旧输入 http 协议的 URL，依旧会使用 http 协议，所以我们需要让网站的 http 请求自动重定向到 https，该功能同样可以通过 Nginx 实现，只需要再额外监听 80 端口就可以实现：</p>\n<pre class="language-shell"><code class="language-shell">\tserver <span class="token punctuation">{</span>\n    \t\tlisten <span class="token number">80</span><span class="token punctuation">;</span>\n    \t\tserver_name plantsechi.top<span class="token punctuation">;</span> \n    \t\t<span class="token builtin class-name">return</span> <span class="token number">301</span> https://<span class="token variable">$host</span><span class="token variable">$request_uri</span><span class="token punctuation">;</span> <span class="token comment">#将默认 80 端口的请求重定向为 https</span>\n\t<span class="token punctuation">}</span>\n</code></pre>\n<p>至此，我们已经成功将网站的协议改为 https，还是挺简单的~</p>\n'}}}]);