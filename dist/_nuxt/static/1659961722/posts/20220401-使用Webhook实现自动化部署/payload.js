__NUXT_JSONP__("/posts/20220401-%E4%BD%BF%E7%94%A8Webhook%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2", {data:[{article:Object.create(null,{default:{writable:true,enumerable:true,value:{attributes:{title:"使用 Webhook 实现前端项目的自动化部署",date:"2022\u002F04\u002F01 16:58:53",updated:"2022\u002F04\u002F01 16:58:53",categories:["技术"],tags:["网站部署"]},html:"\u003Cp\u003E填一下上次部署网站遗留的坑：如何进行前端项目的自动化部署？\u003C\u002Fp\u003E\n\u003Cp\u003E自动化部署的解决方案有很多，比如 \u003Ccode\u003EJenkins\u003C\u002Fcode\u003E、\u003Ccode\u003EDrone\u003C\u002Fcode\u003E、\u003Ccode\u003EGitLab CI\u002FCD\u003C\u002Fcode\u003E、\u003Ccode\u003Ecron 定时任务\u003C\u002Fcode\u003E、\u003Ccode\u003EWebhook\u003C\u002Fcode\u003E等。最开始我尝试使用 Jenkins 进行自动化部署，但是配置到一半我发现 Jenkins 对于我来说太“重”了，绝大部分的功能对我来说都意义不大，毕竟我现在只是想自动化部署一个极其简单的博客，用上 Jenkins 有些买椟还珠了。后来我发现使用 cron 设置定时任务好像还挺简单的，但是有一个显而易见的缺点：无法判断是否需要重新部署，因此会进行很多无意义的操作。最后思来想去还是决定使用 Webhook 来进行自动化部署，它有很多的优点：配置简单，十分轻量，功能不局限于自动化部署。所以还是非常值得学习一下的。\u003C\u002Fp\u003E\n\u003Ch3\u003E什么是 Webhook？\u003C\u002Fh3\u003E\n\u003Cp\u003EWebhook 的概念早在 2007 年就被提出了（但我才刚知道有这么个概念），首先要说明一点，Webhook 并不是一种\u003Cstrong\u003E工具\u003C\u002Fstrong\u003E，而是一个\u003Cstrong\u003E概念\u003C\u002Fstrong\u003E或者说\u003Cstrong\u003E方法\u003C\u002Fstrong\u003E。\u003C\u002Fp\u003E\n\u003Cp\u003E简单理解的话，Webhook 就是一种反向 API 机制，类似于 trigger。API 的使用场景如下：\u003C\u002Fp\u003E\n\u003Col\u003E\n\u003Cli\u003E服务器端提供一个 API\u003C\u002Fli\u003E\n\u003Cli\u003E客户端请求这 API\u003C\u002Fli\u003E\n\u003Cli\u003E服务器端接收到请求，并向客户端返回数据\u003C\u002Fli\u003E\n\u003Cli\u003E客户端拿到数据进行对应的处理\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Cp\u003E而 Webhook 的使用场景则相反：\u003C\u002Fp\u003E\n\u003Col\u003E\n\u003Cli\u003E客户端给服务端提供一个 Webhook URL\u003C\u002Fli\u003E\n\u003Cli\u003E当某些事件被触发时，服务器端会主动向客户端提供的 URL 推送数据\u003C\u002Fli\u003E\n\u003Cli\u003E客户端拿到数据进行对应的处理\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Cp\u003E其实就是客户端由原本的主动请求者变为了被动接收者。\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fpic-go-20220331-1301395896.cos.ap-beijing.myqcloud.com\u002Fimg\u002Fimage-20220401144700498.png\" alt=\"image-20220401144700498\"\u003E\u003C\u002Fp\u003E\n\u003Ch3\u003EWebhook 的应用场景\u003C\u002Fh3\u003E\n\u003Cp\u003EWebhook 的应用场景非常广泛，比如安全性要求非常高的支付功能，第三方平台的鉴权、登录，资源同步等。\u003C\u002Fp\u003E\n\u003Cp\u003E想象一下这个场景：客户端现在向服务器端上传了一个比较大的文件，而这个文件需要在服务器端进行处理之后才返回给客户端，恰巧这时候服务器端有很多的文件待处理，需要排队等待。如果按照传统做法，客户端需要不断地轮询服务器来获取文件的处理状态，但如果使用 Webhook 就不需要再进行轮询了，只需要让服务器端在完成处理后向客户端提供的 Webhook URL 发送一个请求并返回处理后的文件就可以了。be like:\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fpic-go-20220331-1301395896.cos.ap-beijing.myqcloud.com\u002Fimg\u002Fimage-20220401152951862.png\" alt=\"image-20220401152951862\"\u003E\u003C\u002Fp\u003E\n\u003Ch3\u003E使用 Webhook 实现自动化部署\u003C\u002Fh3\u003E\n\u003Cp\u003E简单介绍完 Webhook 之后，我们开始回归正题：自动化部署。\u003C\u002Fp\u003E\n\u003Cp\u003EGitHub 本身就提供了 Webhook 的设置，所以我们可以很方便的监听远程仓库的各种事件，比如 \u003Ccode\u003Epush\u003C\u002Fcode\u003E, \u003Ccode\u003Efolk\u003C\u002Fcode\u003E, \u003Ccode\u003Epull-request\u003C\u002Fcode\u003E 等。所以我们可以大体想到这么一个方案：在服务器上搭建一个 Node 服务用来监听 GitHub 发送过来的信息，每当远程仓库有 commit 时就让 GitHub 向我们的服务器发送一个请求，服务器接收到请求后会自动运行提前准备好的 bash 脚本，完成项目的自动化部署。有了思路之后我们开始一步步进行。\u003C\u002Fp\u003E\n\u003Ch4\u003E搭建 Node 服务\u003C\u002Fh4\u003E\n\u003Cp\u003E秉承“尽量不要重复造轮子”的原则，我们可以使用\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Frvagg\u002Fgithub-webhook-handler\"\u003E一个已经封装好的库\u003C\u002Fa\u003E进行 Webhook 的处理，这个库的代码并不多，逻辑也比较容易懂，建议读一读。\u003C\u002Fp\u003E\n\u003Cp\u003E首先在服务器上创建 Node 服务的根目录，然后在根目录下运行 \u003Ccode\u003Enpm init -y\u003C\u002Fcode\u003E 进行初始化，运行 \u003Ccode\u003Enpm i github-webhook-handler\u003C\u002Fcode\u003E 安装依赖，安装完成后，我们可以在根目录创建一个 \u003Ccode\u003Eindex.js\u003C\u002Fcode\u003E 文件，并写入以下内容：\u003C\u002Fp\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode class=\"language-js\"\u003E\u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E http \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Erequire\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'http'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E createHandler \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Erequire\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'github-webhook-handler'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E handler \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003EcreateHandler\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"token literal-property property\"\u003Epath\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'\u002Fwebhook'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token literal-property property\"\u003Esecret\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'yourSecret'\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token comment\"\u003E\u002F\u002F secret 相当于一个密码，可以自行设置\u003C\u002Fspan\u003E\n\nhttp\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token method function property-access\"\u003EcreateServer\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Ereq\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E res\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token arrow operator\"\u003E=\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token function\"\u003Ehandler\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Ereq\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E res\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Eerr\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token arrow operator\"\u003E=\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    res\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token property-access\"\u003EstatusCode\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token number\"\u003E404\u003C\u002Fspan\u003E\n    res\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token method function property-access\"\u003Eend\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'no such location'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token method function property-access\"\u003Elisten\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token number\"\u003E7777\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token arrow operator\"\u003E=\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token console class-name\"\u003Econsole\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token method function property-access\"\u003Elog\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'server listening on port 7777'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\nhandler\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token method function property-access\"\u003Eon\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'error'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Eerr\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token arrow operator\"\u003E=\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token console class-name\"\u003Econsole\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token method function property-access\"\u003Eerror\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'Error:'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E err\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token property-access\"\u003Emessage\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F 监听 push 事件 \u003C\u002Fspan\u003E\nhandler\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token method function property-access\"\u003Eon\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'push'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Eevent\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token arrow operator\"\u003E=\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E \n  \u003Cspan class=\"token console class-name\"\u003Econsole\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token method function property-access\"\u003Elog\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token template-string\"\u003E\u003Cspan class=\"token template-punctuation string\"\u003E`\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003EReceived a push event from \u003C\u002Fspan\u003E\u003Cspan class=\"token interpolation\"\u003E\u003Cspan class=\"token interpolation-punctuation punctuation\"\u003E${\u003C\u002Fspan\u003Eevent\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token property-access\"\u003Epayload\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token property-access\"\u003Erepository\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token property-access\"\u003Ename\u003C\u002Fspan\u003E\u003Cspan class=\"token interpolation-punctuation punctuation\"\u003E}\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E to \u003C\u002Fspan\u003E\u003Cspan class=\"token interpolation\"\u003E\u003Cspan class=\"token interpolation-punctuation punctuation\"\u003E${\u003C\u002Fspan\u003Eevent\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token property-access\"\u003Epayload\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token property-access\"\u003Eref\u003C\u002Fspan\u003E\u003Cspan class=\"token interpolation-punctuation punctuation\"\u003E}\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token template-punctuation string\"\u003E`\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E接着我们可以使用 pm2 启动服务器 \u003Ccode\u003Epm2 start index.js\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E启动完成后我们就需要到 GitHub 上设置 Webhook 了\u003C\u002Fp\u003E\n\u003Ch4\u003EWebhook 设置\u003C\u002Fh4\u003E\n\u003Cp\u003E首先进入到代码所在的 GitHub 仓库，点击 \u003Ccode\u003ESetting\u003C\u002Fcode\u003E，找到 \u003Ccode\u003EWebhooks\u003C\u002Fcode\u003E 选项卡，点击 \u003Ccode\u003EAdd webhook\u003C\u002Fcode\u003E 来新建一个 Webhook\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fpic-go-20220331-1301395896.cos.ap-beijing.myqcloud.com\u002Fimg\u002Fimage-20220401160047209.png\" alt=\"image-20220401160047209\"\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E新建界面如下：\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fpic-go-20220331-1301395896.cos.ap-beijing.myqcloud.com\u002Fimg\u002Fimage-20220401160329887.png\" alt=\"image-20220401160329887\"\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003EPayload URL\u003C\u002Fcode\u003E 就是我们的服务器的请求路径，也就是服务器 IP 地址，加上我们上面设置的端口号最后加上我们设置的 \u003Ccode\u003Epath\u003C\u002Fcode\u003E。\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003EContent type\u003C\u002Fcode\u003E 一定要选择 \u003Ccode\u003Eapplication\u002Fjson\u003C\u002Fcode\u003E，这一点在 \u003Ccode\u003Egithub-webhook-handler\u003C\u002Fcode\u003E 的文档中也有提到。\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003ESecret\u003C\u002Fcode\u003E 就是我们之前设置的 \u003Ccode\u003Esecret\u003C\u002Fcode\u003E，保持一致就可以了。\u003C\u002Fp\u003E\n\u003Cp\u003E因为我们只需要自动化部署的功能，所以只需要监听 \u003Ccode\u003Epush\u003C\u002Fcode\u003E 事件就可以了。日志也勾上，里面会有很多 Webhook 的配置，可以拿来参考做一些自定义的东西。\u003C\u002Fp\u003E\n\u003Cp\u003E创建完成后，GitHub 会自动测试 Webhook 的可用性，如果显示的是绿色对号，那说明我们的配置没有问题，但如果是红色叉号，那就说明我们的配置存在问题，这里有一个小坑，如果你直接去修改这个 Webhook 的配置，即使修改正确这里的状态也不会改变，因为 GitHub 只会在创建 Webhook 的时候进行连接测试，所以如果你想知道自己修改后的配置是否正确，建议删除原来的 Webhook 然后重新创建，这时候就能知道修改后的配置是否正确了。\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fpic-go-20220331-1301395896.cos.ap-beijing.myqcloud.com\u002Fimg\u002Fimage-20220401162119764.png\" alt=\"image-20220401162119764\"\u003E\u003C\u002Fp\u003E\n\u003Ch4\u003E编写部署脚本\u003C\u002Fh4\u003E\n\u003Cp\u003E现在我们已经可以监听远程仓库的 \u003Ccode\u003Epush\u003C\u002Fcode\u003E 事件了，所以我们只需要在接收事件后运行一下脚本就可以实现自动化部署啦~将 \u003Ccode\u003Eindex.js\u003C\u002Fcode\u003E 的内容稍作修改：\u003C\u002Fp\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode class=\"language-js\"\u003E\u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E http \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Erequire\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'http'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E spawn \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Erequire\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'child_process'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token property-access\"\u003Espawn\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E createHandler \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Erequire\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'github-webhook-handler'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E handler \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003EcreateHandler\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"token literal-property property\"\u003Epath\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'\u002Fwebhook'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token literal-property property\"\u003Esecret\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'yourSecret'\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token comment\"\u003E\u002F\u002F secret 相当于一个密码，可以自行设置\u003C\u002Fspan\u003E\n\nhttp\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token method function property-access\"\u003EcreateServer\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Ereq\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E res\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token arrow operator\"\u003E=\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token function\"\u003Ehandler\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Ereq\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E res\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Eerr\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token arrow operator\"\u003E=\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    res\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token property-access\"\u003EstatusCode\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token number\"\u003E404\u003C\u002Fspan\u003E\n    res\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token method function property-access\"\u003Eend\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'no such location'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token method function property-access\"\u003Elisten\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token number\"\u003E7777\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token arrow operator\"\u003E=\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token console class-name\"\u003Econsole\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token method function property-access\"\u003Elog\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'server listening on port 7777'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\nhandler\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token method function property-access\"\u003Eon\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'error'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Eerr\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token arrow operator\"\u003E=\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token console class-name\"\u003Econsole\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token method function property-access\"\u003Eerror\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'Error:'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E err\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token property-access\"\u003Emessage\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F 监听 push 事件 \u003C\u002Fspan\u003E\nhandler\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token method function property-access\"\u003Eon\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'push'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Eevent\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token arrow operator\"\u003E=\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E \n  \u003Cspan class=\"token console class-name\"\u003Econsole\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token method function property-access\"\u003Elog\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token template-string\"\u003E\u003Cspan class=\"token template-punctuation string\"\u003E`\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003EReceived a push event from \u003C\u002Fspan\u003E\u003Cspan class=\"token interpolation\"\u003E\u003Cspan class=\"token interpolation-punctuation punctuation\"\u003E${\u003C\u002Fspan\u003Eevent\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token property-access\"\u003Epayload\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token property-access\"\u003Erepository\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token property-access\"\u003Ename\u003C\u002Fspan\u003E\u003Cspan class=\"token interpolation-punctuation punctuation\"\u003E}\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E to \u003C\u002Fspan\u003E\u003Cspan class=\"token interpolation\"\u003E\u003Cspan class=\"token interpolation-punctuation punctuation\"\u003E${\u003C\u002Fspan\u003Eevent\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token property-access\"\u003Epayload\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token property-access\"\u003Eref\u003C\u002Fspan\u003E\u003Cspan class=\"token interpolation-punctuation punctuation\"\u003E}\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token template-punctuation string\"\u003E`\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token function\"\u003ErunCmd\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'sh'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'.\u002Fdeploy.sh'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Etext\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token arrow operator\"\u003E=\u003E\u003C\u002Fspan\u003E  \u003Cspan class=\"token console class-name\"\u003Econsole\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token method function property-access\"\u003Elog\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Etext\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F 运行命令\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003ErunCmd\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Ecmd\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E args\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E callback\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E child \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Espawn\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Ecmd\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E args\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Elet\u003C\u002Fspan\u003E resMsg \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E\"Deploy End\"\u003C\u002Fspan\u003E\n\n  child\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token property-access\"\u003Estdout\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token method function property-access\"\u003Eon\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'data'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Ebuffer\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token arrow operator\"\u003E=\u003E\u003C\u002Fspan\u003E resMsg \u003Cspan class=\"token operator\"\u003E+=\u003C\u002Fspan\u003E buffer\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token method function property-access\"\u003EtoString\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  child\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token property-access\"\u003Estdout\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token method function property-access\"\u003Eon\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'end'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token arrow operator\"\u003E=\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Ecallback\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003EresMsg\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E然后在 \u003Ccode\u003Eindex.js\u003C\u002Fcode\u003E 的同级目录下新建 \u003Ccode\u003Edeploy.sh\u003C\u002Fcode\u003E 文件：\u003C\u002Fp\u003E\n\u003Cpre class=\"language-sh\"\u003E\u003Ccode class=\"language-sh\"\u003Eecho &quot;Start deployment&quot;\ncd ~\u002Fwww\u002Fnuxt-blog\necho &quot;stop process&quot;\npm2 stop nuxt-blog\necho &quot;pulling source code...&quot;\ngit pull\necho &quot;check dependencies&quot;\nnpm install\necho &quot;build \u002F.nuxt&quot;\nnpm run build\necho &quot;start process&quot;\npm2 start\necho &quot;Finished.&quot;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E脚本的内容仅供参考，请自行修改\u003C\u002Fp\u003E\n\u003Cp\u003E完成以上步骤之后，我们可以自行测试一下（测试前不要忘记重启服务），本地向远程仓库提交一些修改，比如样式的修改等，然后过一小会去访问网站看一下修改是否生效。\u003C\u002Fp\u003E\n\u003Cp\u003E至此，我们已经完成了自动化部署的需求，其实 Webhook 的用途还有很多，比如有人向仓库提了 \u003Ccode\u003Eissue\u003C\u002Fcode\u003E 可以自动给我们发送提醒邮件，或者也可以通过一些第三方的平台进行个性化提醒，例如钉钉的智能机器人。建议有时间的话可以多多探索~\u003C\u002Fp\u003E\n"}},attributes:{writable:true,enumerable:true,value:{title:"使用 Webhook 实现前端项目的自动化部署",date:"2022\u002F04\u002F01 16:58:53",updated:"2022\u002F04\u002F01 16:58:53",categories:["技术"],tags:["网站部署"]}},html:{writable:true,enumerable:true,value:"\u003Cp\u003E填一下上次部署网站遗留的坑：如何进行前端项目的自动化部署？\u003C\u002Fp\u003E\n\u003Cp\u003E自动化部署的解决方案有很多，比如 \u003Ccode\u003EJenkins\u003C\u002Fcode\u003E、\u003Ccode\u003EDrone\u003C\u002Fcode\u003E、\u003Ccode\u003EGitLab CI\u002FCD\u003C\u002Fcode\u003E、\u003Ccode\u003Ecron 定时任务\u003C\u002Fcode\u003E、\u003Ccode\u003EWebhook\u003C\u002Fcode\u003E等。最开始我尝试使用 Jenkins 进行自动化部署，但是配置到一半我发现 Jenkins 对于我来说太“重”了，绝大部分的功能对我来说都意义不大，毕竟我现在只是想自动化部署一个极其简单的博客，用上 Jenkins 有些买椟还珠了。后来我发现使用 cron 设置定时任务好像还挺简单的，但是有一个显而易见的缺点：无法判断是否需要重新部署，因此会进行很多无意义的操作。最后思来想去还是决定使用 Webhook 来进行自动化部署，它有很多的优点：配置简单，十分轻量，功能不局限于自动化部署。所以还是非常值得学习一下的。\u003C\u002Fp\u003E\n\u003Ch3\u003E什么是 Webhook？\u003C\u002Fh3\u003E\n\u003Cp\u003EWebhook 的概念早在 2007 年就被提出了（但我才刚知道有这么个概念），首先要说明一点，Webhook 并不是一种\u003Cstrong\u003E工具\u003C\u002Fstrong\u003E，而是一个\u003Cstrong\u003E概念\u003C\u002Fstrong\u003E或者说\u003Cstrong\u003E方法\u003C\u002Fstrong\u003E。\u003C\u002Fp\u003E\n\u003Cp\u003E简单理解的话，Webhook 就是一种反向 API 机制，类似于 trigger。API 的使用场景如下：\u003C\u002Fp\u003E\n\u003Col\u003E\n\u003Cli\u003E服务器端提供一个 API\u003C\u002Fli\u003E\n\u003Cli\u003E客户端请求这 API\u003C\u002Fli\u003E\n\u003Cli\u003E服务器端接收到请求，并向客户端返回数据\u003C\u002Fli\u003E\n\u003Cli\u003E客户端拿到数据进行对应的处理\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Cp\u003E而 Webhook 的使用场景则相反：\u003C\u002Fp\u003E\n\u003Col\u003E\n\u003Cli\u003E客户端给服务端提供一个 Webhook URL\u003C\u002Fli\u003E\n\u003Cli\u003E当某些事件被触发时，服务器端会主动向客户端提供的 URL 推送数据\u003C\u002Fli\u003E\n\u003Cli\u003E客户端拿到数据进行对应的处理\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Cp\u003E其实就是客户端由原本的主动请求者变为了被动接收者。\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fpic-go-20220331-1301395896.cos.ap-beijing.myqcloud.com\u002Fimg\u002Fimage-20220401144700498.png\" alt=\"image-20220401144700498\"\u003E\u003C\u002Fp\u003E\n\u003Ch3\u003EWebhook 的应用场景\u003C\u002Fh3\u003E\n\u003Cp\u003EWebhook 的应用场景非常广泛，比如安全性要求非常高的支付功能，第三方平台的鉴权、登录，资源同步等。\u003C\u002Fp\u003E\n\u003Cp\u003E想象一下这个场景：客户端现在向服务器端上传了一个比较大的文件，而这个文件需要在服务器端进行处理之后才返回给客户端，恰巧这时候服务器端有很多的文件待处理，需要排队等待。如果按照传统做法，客户端需要不断地轮询服务器来获取文件的处理状态，但如果使用 Webhook 就不需要再进行轮询了，只需要让服务器端在完成处理后向客户端提供的 Webhook URL 发送一个请求并返回处理后的文件就可以了。be like:\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fpic-go-20220331-1301395896.cos.ap-beijing.myqcloud.com\u002Fimg\u002Fimage-20220401152951862.png\" alt=\"image-20220401152951862\"\u003E\u003C\u002Fp\u003E\n\u003Ch3\u003E使用 Webhook 实现自动化部署\u003C\u002Fh3\u003E\n\u003Cp\u003E简单介绍完 Webhook 之后，我们开始回归正题：自动化部署。\u003C\u002Fp\u003E\n\u003Cp\u003EGitHub 本身就提供了 Webhook 的设置，所以我们可以很方便的监听远程仓库的各种事件，比如 \u003Ccode\u003Epush\u003C\u002Fcode\u003E, \u003Ccode\u003Efolk\u003C\u002Fcode\u003E, \u003Ccode\u003Epull-request\u003C\u002Fcode\u003E 等。所以我们可以大体想到这么一个方案：在服务器上搭建一个 Node 服务用来监听 GitHub 发送过来的信息，每当远程仓库有 commit 时就让 GitHub 向我们的服务器发送一个请求，服务器接收到请求后会自动运行提前准备好的 bash 脚本，完成项目的自动化部署。有了思路之后我们开始一步步进行。\u003C\u002Fp\u003E\n\u003Ch4\u003E搭建 Node 服务\u003C\u002Fh4\u003E\n\u003Cp\u003E秉承“尽量不要重复造轮子”的原则，我们可以使用\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Frvagg\u002Fgithub-webhook-handler\"\u003E一个已经封装好的库\u003C\u002Fa\u003E进行 Webhook 的处理，这个库的代码并不多，逻辑也比较容易懂，建议读一读。\u003C\u002Fp\u003E\n\u003Cp\u003E首先在服务器上创建 Node 服务的根目录，然后在根目录下运行 \u003Ccode\u003Enpm init -y\u003C\u002Fcode\u003E 进行初始化，运行 \u003Ccode\u003Enpm i github-webhook-handler\u003C\u002Fcode\u003E 安装依赖，安装完成后，我们可以在根目录创建一个 \u003Ccode\u003Eindex.js\u003C\u002Fcode\u003E 文件，并写入以下内容：\u003C\u002Fp\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode class=\"language-js\"\u003E\u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E http \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Erequire\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'http'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E createHandler \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Erequire\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'github-webhook-handler'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E handler \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003EcreateHandler\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"token literal-property property\"\u003Epath\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'\u002Fwebhook'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token literal-property property\"\u003Esecret\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'yourSecret'\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token comment\"\u003E\u002F\u002F secret 相当于一个密码，可以自行设置\u003C\u002Fspan\u003E\n\nhttp\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token method function property-access\"\u003EcreateServer\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Ereq\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E res\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token arrow operator\"\u003E=\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token function\"\u003Ehandler\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Ereq\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E res\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Eerr\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token arrow operator\"\u003E=\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    res\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token property-access\"\u003EstatusCode\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token number\"\u003E404\u003C\u002Fspan\u003E\n    res\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token method function property-access\"\u003Eend\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'no such location'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token method function property-access\"\u003Elisten\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token number\"\u003E7777\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token arrow operator\"\u003E=\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token console class-name\"\u003Econsole\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token method function property-access\"\u003Elog\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'server listening on port 7777'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\nhandler\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token method function property-access\"\u003Eon\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'error'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Eerr\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token arrow operator\"\u003E=\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token console class-name\"\u003Econsole\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token method function property-access\"\u003Eerror\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'Error:'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E err\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token property-access\"\u003Emessage\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F 监听 push 事件 \u003C\u002Fspan\u003E\nhandler\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token method function property-access\"\u003Eon\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'push'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Eevent\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token arrow operator\"\u003E=\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E \n  \u003Cspan class=\"token console class-name\"\u003Econsole\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token method function property-access\"\u003Elog\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token template-string\"\u003E\u003Cspan class=\"token template-punctuation string\"\u003E`\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003EReceived a push event from \u003C\u002Fspan\u003E\u003Cspan class=\"token interpolation\"\u003E\u003Cspan class=\"token interpolation-punctuation punctuation\"\u003E${\u003C\u002Fspan\u003Eevent\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token property-access\"\u003Epayload\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token property-access\"\u003Erepository\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token property-access\"\u003Ename\u003C\u002Fspan\u003E\u003Cspan class=\"token interpolation-punctuation punctuation\"\u003E}\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E to \u003C\u002Fspan\u003E\u003Cspan class=\"token interpolation\"\u003E\u003Cspan class=\"token interpolation-punctuation punctuation\"\u003E${\u003C\u002Fspan\u003Eevent\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token property-access\"\u003Epayload\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token property-access\"\u003Eref\u003C\u002Fspan\u003E\u003Cspan class=\"token interpolation-punctuation punctuation\"\u003E}\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token template-punctuation string\"\u003E`\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E接着我们可以使用 pm2 启动服务器 \u003Ccode\u003Epm2 start index.js\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E启动完成后我们就需要到 GitHub 上设置 Webhook 了\u003C\u002Fp\u003E\n\u003Ch4\u003EWebhook 设置\u003C\u002Fh4\u003E\n\u003Cp\u003E首先进入到代码所在的 GitHub 仓库，点击 \u003Ccode\u003ESetting\u003C\u002Fcode\u003E，找到 \u003Ccode\u003EWebhooks\u003C\u002Fcode\u003E 选项卡，点击 \u003Ccode\u003EAdd webhook\u003C\u002Fcode\u003E 来新建一个 Webhook\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fpic-go-20220331-1301395896.cos.ap-beijing.myqcloud.com\u002Fimg\u002Fimage-20220401160047209.png\" alt=\"image-20220401160047209\"\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E新建界面如下：\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fpic-go-20220331-1301395896.cos.ap-beijing.myqcloud.com\u002Fimg\u002Fimage-20220401160329887.png\" alt=\"image-20220401160329887\"\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003EPayload URL\u003C\u002Fcode\u003E 就是我们的服务器的请求路径，也就是服务器 IP 地址，加上我们上面设置的端口号最后加上我们设置的 \u003Ccode\u003Epath\u003C\u002Fcode\u003E。\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003EContent type\u003C\u002Fcode\u003E 一定要选择 \u003Ccode\u003Eapplication\u002Fjson\u003C\u002Fcode\u003E，这一点在 \u003Ccode\u003Egithub-webhook-handler\u003C\u002Fcode\u003E 的文档中也有提到。\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003ESecret\u003C\u002Fcode\u003E 就是我们之前设置的 \u003Ccode\u003Esecret\u003C\u002Fcode\u003E，保持一致就可以了。\u003C\u002Fp\u003E\n\u003Cp\u003E因为我们只需要自动化部署的功能，所以只需要监听 \u003Ccode\u003Epush\u003C\u002Fcode\u003E 事件就可以了。日志也勾上，里面会有很多 Webhook 的配置，可以拿来参考做一些自定义的东西。\u003C\u002Fp\u003E\n\u003Cp\u003E创建完成后，GitHub 会自动测试 Webhook 的可用性，如果显示的是绿色对号，那说明我们的配置没有问题，但如果是红色叉号，那就说明我们的配置存在问题，这里有一个小坑，如果你直接去修改这个 Webhook 的配置，即使修改正确这里的状态也不会改变，因为 GitHub 只会在创建 Webhook 的时候进行连接测试，所以如果你想知道自己修改后的配置是否正确，建议删除原来的 Webhook 然后重新创建，这时候就能知道修改后的配置是否正确了。\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fpic-go-20220331-1301395896.cos.ap-beijing.myqcloud.com\u002Fimg\u002Fimage-20220401162119764.png\" alt=\"image-20220401162119764\"\u003E\u003C\u002Fp\u003E\n\u003Ch4\u003E编写部署脚本\u003C\u002Fh4\u003E\n\u003Cp\u003E现在我们已经可以监听远程仓库的 \u003Ccode\u003Epush\u003C\u002Fcode\u003E 事件了，所以我们只需要在接收事件后运行一下脚本就可以实现自动化部署啦~将 \u003Ccode\u003Eindex.js\u003C\u002Fcode\u003E 的内容稍作修改：\u003C\u002Fp\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode class=\"language-js\"\u003E\u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E http \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Erequire\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'http'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E spawn \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Erequire\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'child_process'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token property-access\"\u003Espawn\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E createHandler \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Erequire\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'github-webhook-handler'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E handler \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003EcreateHandler\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"token literal-property property\"\u003Epath\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'\u002Fwebhook'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token literal-property property\"\u003Esecret\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'yourSecret'\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token comment\"\u003E\u002F\u002F secret 相当于一个密码，可以自行设置\u003C\u002Fspan\u003E\n\nhttp\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token method function property-access\"\u003EcreateServer\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Ereq\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E res\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token arrow operator\"\u003E=\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token function\"\u003Ehandler\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Ereq\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E res\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Eerr\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token arrow operator\"\u003E=\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    res\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token property-access\"\u003EstatusCode\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token number\"\u003E404\u003C\u002Fspan\u003E\n    res\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token method function property-access\"\u003Eend\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'no such location'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token method function property-access\"\u003Elisten\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token number\"\u003E7777\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token arrow operator\"\u003E=\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token console class-name\"\u003Econsole\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token method function property-access\"\u003Elog\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'server listening on port 7777'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\nhandler\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token method function property-access\"\u003Eon\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'error'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Eerr\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token arrow operator\"\u003E=\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token console class-name\"\u003Econsole\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token method function property-access\"\u003Eerror\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'Error:'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E err\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token property-access\"\u003Emessage\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F 监听 push 事件 \u003C\u002Fspan\u003E\nhandler\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token method function property-access\"\u003Eon\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'push'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Eevent\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token arrow operator\"\u003E=\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E \n  \u003Cspan class=\"token console class-name\"\u003Econsole\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token method function property-access\"\u003Elog\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token template-string\"\u003E\u003Cspan class=\"token template-punctuation string\"\u003E`\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003EReceived a push event from \u003C\u002Fspan\u003E\u003Cspan class=\"token interpolation\"\u003E\u003Cspan class=\"token interpolation-punctuation punctuation\"\u003E${\u003C\u002Fspan\u003Eevent\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token property-access\"\u003Epayload\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token property-access\"\u003Erepository\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token property-access\"\u003Ename\u003C\u002Fspan\u003E\u003Cspan class=\"token interpolation-punctuation punctuation\"\u003E}\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E to \u003C\u002Fspan\u003E\u003Cspan class=\"token interpolation\"\u003E\u003Cspan class=\"token interpolation-punctuation punctuation\"\u003E${\u003C\u002Fspan\u003Eevent\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token property-access\"\u003Epayload\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token property-access\"\u003Eref\u003C\u002Fspan\u003E\u003Cspan class=\"token interpolation-punctuation punctuation\"\u003E}\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token template-punctuation string\"\u003E`\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token function\"\u003ErunCmd\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'sh'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'.\u002Fdeploy.sh'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Etext\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token arrow operator\"\u003E=\u003E\u003C\u002Fspan\u003E  \u003Cspan class=\"token console class-name\"\u003Econsole\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token method function property-access\"\u003Elog\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Etext\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F 运行命令\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003ErunCmd\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Ecmd\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E args\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E callback\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E child \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Espawn\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Ecmd\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E args\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Elet\u003C\u002Fspan\u003E resMsg \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E\"Deploy End\"\u003C\u002Fspan\u003E\n\n  child\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token property-access\"\u003Estdout\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token method function property-access\"\u003Eon\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'data'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Ebuffer\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token arrow operator\"\u003E=\u003E\u003C\u002Fspan\u003E resMsg \u003Cspan class=\"token operator\"\u003E+=\u003C\u002Fspan\u003E buffer\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token method function property-access\"\u003EtoString\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  child\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token property-access\"\u003Estdout\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token method function property-access\"\u003Eon\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'end'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token arrow operator\"\u003E=\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Ecallback\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003EresMsg\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E然后在 \u003Ccode\u003Eindex.js\u003C\u002Fcode\u003E 的同级目录下新建 \u003Ccode\u003Edeploy.sh\u003C\u002Fcode\u003E 文件：\u003C\u002Fp\u003E\n\u003Cpre class=\"language-sh\"\u003E\u003Ccode class=\"language-sh\"\u003Eecho &quot;Start deployment&quot;\ncd ~\u002Fwww\u002Fnuxt-blog\necho &quot;stop process&quot;\npm2 stop nuxt-blog\necho &quot;pulling source code...&quot;\ngit pull\necho &quot;check dependencies&quot;\nnpm install\necho &quot;build \u002F.nuxt&quot;\nnpm run build\necho &quot;start process&quot;\npm2 start\necho &quot;Finished.&quot;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E脚本的内容仅供参考，请自行修改\u003C\u002Fp\u003E\n\u003Cp\u003E完成以上步骤之后，我们可以自行测试一下（测试前不要忘记重启服务），本地向远程仓库提交一些修改，比如样式的修改等，然后过一小会去访问网站看一下修改是否生效。\u003C\u002Fp\u003E\n\u003Cp\u003E至此，我们已经完成了自动化部署的需求，其实 Webhook 的用途还有很多，比如有人向仓库提了 \u003Ccode\u003Eissue\u003C\u002Fcode\u003E 可以自动给我们发送提醒邮件，或者也可以通过一些第三方的平台进行个性化提醒，例如钉钉的智能机器人。建议有时间的话可以多多探索~\u003C\u002Fp\u003E\n"}})}],fetch:{},mutations:void 0});