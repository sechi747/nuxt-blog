__NUXT_JSONP__("/posts/20220328-%E9%80%9A%E8%BF%87Nginx%E6%8A%8A%E7%BD%91%E7%AB%99%E6%94%B9%E4%B8%BAHTTPS%E5%8D%8F%E8%AE%AE", {data:[{article:Object.create(null,{default:{writable:true,enumerable:true,value:{attributes:{title:"通过 Nginx 把网站改为 HTTPS 协议",date:"2022\u002F03\u002F28 10:58:00",updated:"2022\u002F03\u002F28 10:58:00",categories:["技术"],tags:["网站部署"]},html:"\u003Cp\u003E填一下上次部署网站遗留的坑：如何使用 Nginx 安装 SSL 证书，从而使网站的协议由 http 变为 https\u003C\u002Fp\u003E\n\u003Ch3\u003E前期准备\u003C\u002Fh3\u003E\n\u003Col\u003E\n\u003Cli\u003E首先，我们需要给我们的域名申请 SSL 证书，既有免费证书，也有付费证书，一般来讲免费证书就已经够用了，所以在这里只介绍免费证书的申请方法。\u003Cbr\u003E\n这里建议去\u003Ca href=\"https:\u002F\u002Fhomenew.console.aliyun.com\u002Fhome\u002Fdashboard\u002FProductAndService\"\u003E阿里云\u003C\u002Fa\u003E或\u003Ca href=\"https:\u002F\u002Fconsole.cloud.tencent.com\u002Fcertoverview\"\u003E腾讯云\u003C\u002Fa\u003E申请证书（我选择的是腾讯云，所以下述步骤以腾讯云为准），申请步骤非常简单，只需要填上一些必要的信息（域名、邮箱等）就可以申请，大概 1-10 分钟就可以拿到证书啦。\u003C\u002Fli\u003E\n\u003Cli\u003E申请完成后我们可以在证书管理界面下载证书，下载的格式选择 Nginx，解压后可以得到四个文件:\n\u003Cul\u003E\n\u003Cli\u003E\u003Ccode\u003Eplantsechi.top_bundle.crt\u003C\u002Fcode\u003E 证书文件\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003Eplantsechi.top_bundle.pem\u003C\u002Fcode\u003E 证书文件（安装时可忽略该文件）\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003Eplantsechi.top.key\u003C\u002Fcode\u003E 私钥文件\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003Eplantsechi.top.csr\u003C\u002Fcode\u003E CSR 文件（安装时可忽略该文件）\u003Cbr\u003E\n其实安装证书的过程中真正用到的只有 \u003Ccode\u003Ecrt\u003C\u002Fcode\u003E 文件和 \u003Ccode\u003Ekey\u003C\u002Fcode\u003E 文件\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E有了证书之后我们需要把它们上传到服务器上，这里我使用的是 XFTP 进行文件上传。首先我们需要在 Nginx 的根目录新建一个文件夹存放证书，然后把两个文件放到该文件夹内。最终达到的效果：\u003Ccode\u003E\u002Fetc\u002Fnginx\u002Fcert\u003C\u002Fcode\u003E 中存放了 \u003Ccode\u003Eplantsechi.top_bundle.crt\u003C\u002Fcode\u003E 和 \u003Ccode\u003Eplantsechi.top.key\u003C\u002Fcode\u003E 两个文件。\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Ch3\u003ENginx 配置\u003C\u002Fh3\u003E\n\u003Cp\u003E进行完以上操作后，我们需要修改一下 Nginx 的配置，下面放出我的部分配置供参考：\u003C\u002Fp\u003E\n\u003Cpre class=\"language-shell\"\u003E\u003Ccode class=\"language-shell\"\u003Eupstream webserver \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n\t\tserver \u003Cspan class=\"token number\"\u003E127.0\u003C\u002Fspan\u003E.0.1:7070\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n\t\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\n\tserver \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n   \t\t\tlisten \u003Cspan class=\"token number\"\u003E443\u003C\u002Fspan\u003E ssl\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n    \t\tserver_name plantsechi.top\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E \u003Cspan class=\"token comment\"\u003E#域名\u003C\u002Fspan\u003E\n    \t\tssl_certificate  \u002Fetc\u002Fnginx\u002Fcert\u002Fplantsechi.top_bundle.crt\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E \u003Cspan class=\"token comment\"\u003E#证书文件的路径\u003C\u002Fspan\u003E\n    \t\tssl_certificate_key \u002Fetc\u002Fnginx\u002Fcert\u002Fplantsechi.top.key\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E \u003Cspan class=\"token comment\"\u003E#私钥文件的路径\u003C\u002Fspan\u003E\n    \t\tssl_session_timeout 5m\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n   \t\t\tssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:\u003Cspan class=\"token operator\"\u003E!\u003C\u002Fspan\u003ENULL:\u003Cspan class=\"token operator\"\u003E!\u003C\u002Fspan\u003EaNULL:\u003Cspan class=\"token operator\"\u003E!\u003C\u002Fspan\u003EMD5:\u003Cspan class=\"token operator\"\u003E!\u003C\u002Fspan\u003EADH:\u003Cspan class=\"token operator\"\u003E!\u003C\u002Fspan\u003ERC4\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n    \t\tssl_protocols TLSv1.2 TLSv1.3\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n    \t\tssl_prefer_server_ciphers on\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n\n    \t\t\u003Cspan class=\"token function\"\u003Egzip\u003C\u002Fspan\u003E            on\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n    \t\tgzip_types      text\u002Fplain application\u002Fxml text\u002Fcss application\u002Fjavascript\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n    \t\tgzip_min_length \u003Cspan class=\"token number\"\u003E1000\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n\n    \t\tlocation \u002F \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n        \t\t\texpires \u003Cspan class=\"token variable\"\u003E$expires\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n        \t\t\tproxy_redirect                      off\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n        \t\t\tproxy_set_header Host               \u003Cspan class=\"token variable\"\u003E$host\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n        \t\t\tproxy_set_header X-Real-IP          \u003Cspan class=\"token variable\"\u003E$remote_addr\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n        \t\t\tproxy_set_header X-Forwarded-For    \u003Cspan class=\"token variable\"\u003E$proxy_add_x_forwarded_for\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n        \t\t\tproxy_set_header X-Forwarded-Proto  \u003Cspan class=\"token variable\"\u003E$scheme\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n        \t\t\tproxy_read_timeout          1m\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n        \t\t\tproxy_connect_timeout       1m\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n        \t\t\tproxy_pass         http:\u002F\u002Fwebserver\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E \n    \t\t\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\t\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E完成以上配置就可以通过 https 协议访问网站啦~但是还是有一些地方不太完美，如果在浏览器依旧输入 http 协议的 URL，依旧会使用 http 协议，所以我们需要让网站的 http 请求自动重定向到 https，该功能同样可以通过 Nginx 实现，只需要再额外监听 80 端口就可以实现：\u003C\u002Fp\u003E\n\u003Cpre class=\"language-shell\"\u003E\u003Ccode class=\"language-shell\"\u003E\tserver \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    \t\tlisten \u003Cspan class=\"token number\"\u003E80\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n    \t\tserver_name plantsechi.top\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E \n    \t\t\u003Cspan class=\"token builtin class-name\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"token number\"\u003E301\u003C\u002Fspan\u003E https:\u002F\u002F\u003Cspan class=\"token variable\"\u003E$host\u003C\u002Fspan\u003E\u003Cspan class=\"token variable\"\u003E$request_uri\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E \u003Cspan class=\"token comment\"\u003E#将默认 80 端口的请求重定向为 https\u003C\u002Fspan\u003E\n\t\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E至此，我们已经成功将网站的协议改为 https，还是挺简单的~\u003C\u002Fp\u003E\n"}},attributes:{writable:true,enumerable:true,value:{title:"通过 Nginx 把网站改为 HTTPS 协议",date:"2022\u002F03\u002F28 10:58:00",updated:"2022\u002F03\u002F28 10:58:00",categories:["技术"],tags:["网站部署"]}},html:{writable:true,enumerable:true,value:"\u003Cp\u003E填一下上次部署网站遗留的坑：如何使用 Nginx 安装 SSL 证书，从而使网站的协议由 http 变为 https\u003C\u002Fp\u003E\n\u003Ch3\u003E前期准备\u003C\u002Fh3\u003E\n\u003Col\u003E\n\u003Cli\u003E首先，我们需要给我们的域名申请 SSL 证书，既有免费证书，也有付费证书，一般来讲免费证书就已经够用了，所以在这里只介绍免费证书的申请方法。\u003Cbr\u003E\n这里建议去\u003Ca href=\"https:\u002F\u002Fhomenew.console.aliyun.com\u002Fhome\u002Fdashboard\u002FProductAndService\"\u003E阿里云\u003C\u002Fa\u003E或\u003Ca href=\"https:\u002F\u002Fconsole.cloud.tencent.com\u002Fcertoverview\"\u003E腾讯云\u003C\u002Fa\u003E申请证书（我选择的是腾讯云，所以下述步骤以腾讯云为准），申请步骤非常简单，只需要填上一些必要的信息（域名、邮箱等）就可以申请，大概 1-10 分钟就可以拿到证书啦。\u003C\u002Fli\u003E\n\u003Cli\u003E申请完成后我们可以在证书管理界面下载证书，下载的格式选择 Nginx，解压后可以得到四个文件:\n\u003Cul\u003E\n\u003Cli\u003E\u003Ccode\u003Eplantsechi.top_bundle.crt\u003C\u002Fcode\u003E 证书文件\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003Eplantsechi.top_bundle.pem\u003C\u002Fcode\u003E 证书文件（安装时可忽略该文件）\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003Eplantsechi.top.key\u003C\u002Fcode\u003E 私钥文件\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003Eplantsechi.top.csr\u003C\u002Fcode\u003E CSR 文件（安装时可忽略该文件）\u003Cbr\u003E\n其实安装证书的过程中真正用到的只有 \u003Ccode\u003Ecrt\u003C\u002Fcode\u003E 文件和 \u003Ccode\u003Ekey\u003C\u002Fcode\u003E 文件\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E有了证书之后我们需要把它们上传到服务器上，这里我使用的是 XFTP 进行文件上传。首先我们需要在 Nginx 的根目录新建一个文件夹存放证书，然后把两个文件放到该文件夹内。最终达到的效果：\u003Ccode\u003E\u002Fetc\u002Fnginx\u002Fcert\u003C\u002Fcode\u003E 中存放了 \u003Ccode\u003Eplantsechi.top_bundle.crt\u003C\u002Fcode\u003E 和 \u003Ccode\u003Eplantsechi.top.key\u003C\u002Fcode\u003E 两个文件。\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Ch3\u003ENginx 配置\u003C\u002Fh3\u003E\n\u003Cp\u003E进行完以上操作后，我们需要修改一下 Nginx 的配置，下面放出我的部分配置供参考：\u003C\u002Fp\u003E\n\u003Cpre class=\"language-shell\"\u003E\u003Ccode class=\"language-shell\"\u003Eupstream webserver \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n\t\tserver \u003Cspan class=\"token number\"\u003E127.0\u003C\u002Fspan\u003E.0.1:7070\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n\t\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\n\tserver \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n   \t\t\tlisten \u003Cspan class=\"token number\"\u003E443\u003C\u002Fspan\u003E ssl\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n    \t\tserver_name plantsechi.top\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E \u003Cspan class=\"token comment\"\u003E#域名\u003C\u002Fspan\u003E\n    \t\tssl_certificate  \u002Fetc\u002Fnginx\u002Fcert\u002Fplantsechi.top_bundle.crt\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E \u003Cspan class=\"token comment\"\u003E#证书文件的路径\u003C\u002Fspan\u003E\n    \t\tssl_certificate_key \u002Fetc\u002Fnginx\u002Fcert\u002Fplantsechi.top.key\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E \u003Cspan class=\"token comment\"\u003E#私钥文件的路径\u003C\u002Fspan\u003E\n    \t\tssl_session_timeout 5m\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n   \t\t\tssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:\u003Cspan class=\"token operator\"\u003E!\u003C\u002Fspan\u003ENULL:\u003Cspan class=\"token operator\"\u003E!\u003C\u002Fspan\u003EaNULL:\u003Cspan class=\"token operator\"\u003E!\u003C\u002Fspan\u003EMD5:\u003Cspan class=\"token operator\"\u003E!\u003C\u002Fspan\u003EADH:\u003Cspan class=\"token operator\"\u003E!\u003C\u002Fspan\u003ERC4\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n    \t\tssl_protocols TLSv1.2 TLSv1.3\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n    \t\tssl_prefer_server_ciphers on\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n\n    \t\t\u003Cspan class=\"token function\"\u003Egzip\u003C\u002Fspan\u003E            on\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n    \t\tgzip_types      text\u002Fplain application\u002Fxml text\u002Fcss application\u002Fjavascript\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n    \t\tgzip_min_length \u003Cspan class=\"token number\"\u003E1000\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n\n    \t\tlocation \u002F \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n        \t\t\texpires \u003Cspan class=\"token variable\"\u003E$expires\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n        \t\t\tproxy_redirect                      off\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n        \t\t\tproxy_set_header Host               \u003Cspan class=\"token variable\"\u003E$host\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n        \t\t\tproxy_set_header X-Real-IP          \u003Cspan class=\"token variable\"\u003E$remote_addr\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n        \t\t\tproxy_set_header X-Forwarded-For    \u003Cspan class=\"token variable\"\u003E$proxy_add_x_forwarded_for\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n        \t\t\tproxy_set_header X-Forwarded-Proto  \u003Cspan class=\"token variable\"\u003E$scheme\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n        \t\t\tproxy_read_timeout          1m\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n        \t\t\tproxy_connect_timeout       1m\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n        \t\t\tproxy_pass         http:\u002F\u002Fwebserver\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E \n    \t\t\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\t\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E完成以上配置就可以通过 https 协议访问网站啦~但是还是有一些地方不太完美，如果在浏览器依旧输入 http 协议的 URL，依旧会使用 http 协议，所以我们需要让网站的 http 请求自动重定向到 https，该功能同样可以通过 Nginx 实现，只需要再额外监听 80 端口就可以实现：\u003C\u002Fp\u003E\n\u003Cpre class=\"language-shell\"\u003E\u003Ccode class=\"language-shell\"\u003E\tserver \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    \t\tlisten \u003Cspan class=\"token number\"\u003E80\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n    \t\tserver_name plantsechi.top\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E \n    \t\t\u003Cspan class=\"token builtin class-name\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"token number\"\u003E301\u003C\u002Fspan\u003E https:\u002F\u002F\u003Cspan class=\"token variable\"\u003E$host\u003C\u002Fspan\u003E\u003Cspan class=\"token variable\"\u003E$request_uri\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E \u003Cspan class=\"token comment\"\u003E#将默认 80 端口的请求重定向为 https\u003C\u002Fspan\u003E\n\t\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E至此，我们已经成功将网站的协议改为 https，还是挺简单的~\u003C\u002Fp\u003E\n"}})}],fetch:{},mutations:void 0});