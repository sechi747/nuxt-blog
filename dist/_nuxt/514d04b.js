(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{363:function(n,t){n.exports={attributes:{title:"在 Dart 中 final 和 const 的不同点",date:"2022/04/18 23:01:40",updated:"2022/04/18 23:01:40",categories:["技术"],tags:["Dart"]},html:'<p>学习 dart 的时候对两个关键字的使用比较迷惑，一个是 <code>final</code>，一个是 <code>const</code>。查阅了一些资料后决定做一些简单的总结。</p>\n<h2>共同点</h2>\n<p><code>final</code> 和 <code>const</code> 都是用来定义常量的关键字，它们有以下共同点：</p>\n<ul>\n<li>可以省略声明的类型</li>\n<li>初始化之后不可再次赋值</li>\n<li>不能和 <code>var</code> 同时使用</li>\n</ul>\n<pre class="language-dart"><code class="language-dart"><span class="token keyword">final</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token comment">// 会直接在 IDE 中就报红</span>\na <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> \nb <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>\n</code></pre>\n<h2>不同点</h2>\n<ol>\n<li>\n<p>虽然 <code>final</code> 和 <code>const</code> 定义的常量在初始化后就不可以再被修改，但还是有细微的不同。常量的实质是指针不可修改，但是 <code>final</code> 定义的常量的“值”可以被修改，因为它只限定了指针不可修改，但并没有限定指针所指向的值不能修改。但是 <code>const</code> 定义的常量是真的不能修改。</p>\n<pre class="language-dart"><code class="language-dart"><span class="token keyword">final</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\na<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>\n<span class="token function">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [4, 2, 3]</span>\n\n<span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\nb<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span> <span class="token comment">// Unsupported operation: Cannot modify an unmodifiable list</span>\n</code></pre>\n</li>\n<li>\n<p>使用 <code>const</code> 多次定义一个常量，它们的值其实是一样的。这也算是 dart 做的一种优化。</p>\n<pre class="language-dart"><code class="language-dart"><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token function">print</span><span class="token punctuation">(</span>a <span class="token operator">==</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>\n\n<span class="token keyword">const</span> c <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> d <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token function">print</span><span class="token punctuation">(</span>c <span class="token operator">==</span> d<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>\n</code></pre>\n</li>\n<li>\n<p><code>const</code> 不仅可以定义变量（variable），还可以定义值（value）。也就是可以写在等号右边。而 <code>final</code> 则不可以。</p>\n<pre class="language-dart"><code class="language-dart"><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token keyword">const</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\na<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>  <span class="token comment">// Unsupported operation: Cannot modify an unmodifiable list</span>\n\n<span class="token comment">// 虽然常量值不可以修改，但是被赋予常量值的变量的值是可以修改的。</span>\na <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token function">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// [3, 4]</span>\n</code></pre>\n</li>\n<li>\n<p><code>const</code> 是编译时常量，必须在编译时就有一个确定的值。而 <code>final</code> 是运行时常量，他会在第一次使用时被初始化赋值。</p>\n<pre class="language-dart"><code class="language-dart"><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// ok</span>\n\n<span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> c <span class="token operator">=</span> b <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// IDE 会报红</span>\n\n<span class="token keyword">const</span> d <span class="token operator">=</span> <span class="token class-name">DateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// IDE 会报红</span>\n\n<span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>\n<span class="token keyword">final</span> y <span class="token operator">=</span> x <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// ok</span>\n\n<span class="token keyword">final</span> z <span class="token operator">=</span> <span class="token class-name">DateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ok</span>\n</code></pre>\n</li>\n<li>\n<p>修饰常量构造函数时必须使用 <code>const</code></p>\n<pre class="language-dart"><code class="language-dart"><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token class-name">ConstObject</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  a<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">ConstObject</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 使用常量构造函数时要用 final 修饰类的成员</span>\n  <span class="token keyword">final</span> value<span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token class-name">ConstObject</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">print</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre>\n</li>\n</ol>\n<p>纸上得来终觉浅。还是需要多敲几遍才能记得深刻~</p>\n'}}}]);