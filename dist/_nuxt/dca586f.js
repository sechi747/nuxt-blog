(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{362:function(o,n){o.exports={attributes:{title:"Windows 系统下搭建 Flutter 环境并运行 Flutter 项目",date:"2022/04/12 14:12:40",updated:"2022/04/12 14:12:40",categories:["技术"],tags:["Flutter"]},html:'<p>组长昨天说今年可能会尝试使用 Flutter 开发一个项目，听到这个消息后我急急忙忙地开卷，毕竟技多不压身。下面简单介绍一下 Windows 系统如何搭建 Flutter 运行环境。</p>\n<h2>获取 Flutter SDK</h2>\n<p>这里有两种方式获取 SDK，一种是直接下载安装压缩包，另一种是通过 git 来获取源码。我选择了前者，因为会省事不少。</p>\n<p>下载地址在<a href="https://docs.flutter.dev/get-started/install/windows">官网</a>可以找到。</p>\n<p>下载好安装包之后，找一个自己喜欢的目录解压，官方建议最好找一个不需要特殊权限的文件夹进行解压，同时路径里不要包含特殊符号或者空格。这里我选择解压到 <code>D:\\flutter</code>，后续的所有操作也以这个路径为准。</p>\n<h2>配置环境变量</h2>\n<p>首先打开环境变量配置，找到系统变量里的 <code>Path</code> 并进行编辑操作</p>\n<p><img src="https://pic-go-20220331-1301395896.cos.ap-beijing.myqcloud.com/img/image-20220412110205943.png" alt="image-20220412110205943"></p>\n<p>然后点击新建，把自己 <code>flutter\\bin</code> 所在的完整路径填进去，最后点击确定。</p>\n<p><img src="https://pic-go-20220331-1301395896.cos.ap-beijing.myqcloud.com/img/image-20220412110337670.png" alt="image-20220412110337670"></p>\n<p>完成环境变量的配置，可以打开命令行工具，输入 <code>flutter --version</code> 来检查是否配置成功。由于我们下载的 SDK 里面已经包含了 Dart，所以输入 <code>dart --version</code> 也会出现 dart 的版本信息。</p>\n<h2>依赖检查</h2>\n<p>在命令行中运行 <code>flutter doctor</code> 可以自动检查我们的依赖是否有缺失。第一次运行时 flutter 会下载一些东西，所以运行时间可能比较长，耐心等待就可以。运行结果大概长这样：</p>\n<p><img src="https://pic-go-20220331-1301395896.cos.ap-beijing.myqcloud.com/img/image-20220412111026121.png" alt="image-20220412111026121"></p>\n<p>每个人的检查结果可能都不相同，根据检查的提示自行安装即可。</p>\n<p><strong>注意</strong>：如果你不需要开发桌面端应用的话，Visual Studio 是不需要安装的。</p>\n<h2>Android Studio 配置</h2>\n<p>如果你之前没有安装过 Android Studio，那么上面的检查可能会有很多不通过的地方。下面简单介绍 Android Studio 的配置流程。</p>\n<h3>安装</h3>\n<p>首先去<a href="https://developer.android.com/studio">官网</a>下载安装包并安装，具体安装过程可以自行搜索，需要额外配置 JAVA 环境之类的。</p>\n<p>安装完之后，第一次打开时会有一个引导流程，由于我已经安装过了，所以没有办法截图。只需要记得安装这几样东西：<code>Android SDK</code>，<code>Android SDK Command-line Tools</code>，<code>Android SDK Build-Tools</code>。</p>\n<p>将 Android Studio 初始化完之后，打开命令行工具，输入 <code>flutter config --android-studio-dir D:\\software\\AndroidStudio</code> 来配置 Android Studio 的安装路径。你需要把路径替换为自己的实际安装路径，并且路径里<strong>不要有空格</strong>。</p>\n<p>这时候再次运行 <code>flutter doctor</code> 应该就可以发现很多依赖项不再爆红了。</p>\n<h3>安装 Android 虚拟机</h3>\n<blockquote>\n<p>这里我略过了真机调试，选择了虚拟机调试，如果有真机调试的需求可以去官方文档自行配置。</p>\n</blockquote>\n<p>首先打开 Android Studio 中的 AVD Manager</p>\n<p><img src="https://pic-go-20220331-1301395896.cos.ap-beijing.myqcloud.com/img/image-20220412115153991.png" alt="image-20220412115153991"></p>\n<p>创建一个新的虚拟机</p>\n<p><img src="https://pic-go-20220331-1301395896.cos.ap-beijing.myqcloud.com/img/image-20220412115219412.png" alt="image-20220412115219412"></p>\n<p>选择一个喜欢的机型，然后点击 Next</p>\n<p><img src="https://pic-go-20220331-1301395896.cos.ap-beijing.myqcloud.com/img/image-20220412115249842.png" alt="image-20220412115249842"></p>\n<p>选择一个系统镜像，这里我选择的是最新的 Android 12，选择自己需要的版本即可。如果选择了没有安装过的镜像则需要下载，下载速度可能比较慢，耐心等待即可。安装完成后点击 Next</p>\n<p><img src="https://pic-go-20220331-1301395896.cos.ap-beijing.myqcloud.com/img/image-20220412115458335.png" alt="image-20220412115458335"></p>\n<p>这里配置页面需要选择硬件加速，选择 <code>Hardware - GLES 2.0</code> ，然后点击 Finish 即可。**注意：**如果这一选项不可选择，那么可以尝试换一个机型或系统镜像。</p>\n<p><img src="https://pic-go-20220331-1301395896.cos.ap-beijing.myqcloud.com/img/image-20220412133437865.png" alt="image-20220412133437865"></p>\n<p>最后，打开命令行输入 <code>flutter doctor --android-licenses</code>，一路同意就完事了。</p>\n<p>这时候我们再次输入 <code>flutter doctor</code> 应该就可以发现除了 Visual Studio 外其他的依赖都已经安装完成了。</p>\n<h3>新建一个 Flutter 项目并运行</h3>\n<p>为了能运行 Flutter 项目，我们需要在 Android Studio 的 Plugins 界面中安装两个插件：Flutter 和 Dart，安装完成后重启 IDE 即可。</p>\n<p>重启后我们可以看到一个新的按钮： <code>New Flutter Project</code></p>\n<p><img src="https://pic-go-20220331-1301395896.cos.ap-beijing.myqcloud.com/img/image-20220412134128350.png" alt="image-20220412134128350"></p>\n<p>点进去之后会让我们先配置 flutter 目录，选择完目录后点击 Next</p>\n<p><img src="https://pic-go-20220331-1301395896.cos.ap-beijing.myqcloud.com/img/image-20220412134214170.png" alt="image-20220412134214170"></p>\n<p>接着就是项目的一些信息填写。需要注意的是，项目的存放位置不要使用 <code>-</code> 或者空格，因为 dart 不支持。所以我们需要使用下划线来分隔单词。下面的 <code>Organization</code> 是填写公司的域名，在应用发布时，它会和项目名称一起作为 Android 的包名。应用发布后包名将无法修改，不过如果不发布的话这一项随便填一下就可以。填完这些信息之后点击 Finish 就可以完成项目创建。</p>\n<p><img src="https://pic-go-20220331-1301395896.cos.ap-beijing.myqcloud.com/img/image-20220412134450089.png" alt="image-20220412134450089"></p>\n<p>打开刚刚创建好的项目，首先选择我们之前在 AVD Manager 配置的虚拟机，然后选择好运行的 main 文件，点击运行就可以跑起来项目啦</p>\n<p><img src="https://pic-go-20220331-1301395896.cos.ap-beijing.myqcloud.com/img/image-20220412135646713.png" alt="image-20220412135646713"></p>\n<p>但是众所周知，有些网站在国内的访问速度是很慢的，所以很有可能你会卡在这一步：</p>\n<p><img src="https://pic-go-20220331-1301395896.cos.ap-beijing.myqcloud.com/img/image-20220412135821050.png" alt="image-20220412135821050"></p>\n<p>原因是项目默认的 Gradle 的 Maven 仓库我们访问不到，所以我们需要把仓库地址配置为国内镜像源。步骤如下：</p>\n<ol>\n<li>\n<p>修改项目目录下的 <code>android/build.gradle</code> 文件内的仓库地址为</p>\n<pre class="language-js"><code class="language-js">maven <span class="token punctuation">{</span> url <span class="token string">\'https://maven.aliyun.com/repository/google\'</span> <span class="token punctuation">}</span>\nmaven <span class="token punctuation">{</span> url <span class="token string">\'https://maven.aliyun.com/repository/jcenter\'</span> <span class="token punctuation">}</span>\nmaven <span class="token punctuation">{</span> url <span class="token string">\'http://maven.aliyun.com/nexus/content/groups/public\'</span> <span class="token punctuation">}</span>\n</code></pre>\n<p><img src="https://pic-go-20220331-1301395896.cos.ap-beijing.myqcloud.com/img/image-20220412140306626.png" alt="image-20220412140306626"></p>\n</li>\n<li>\n<p>修改 flutter SDK目录下的 <code>flutter\\packages\\flutter_tools\\gradle\\flutter.gradle</code> 和 <code>flutter\\packages\\flutter_tools\\gradle\\resolve_dependencies.gradle</code>，同样也是修改仓库地址。</p>\n</li>\n</ol>\n<p>修改完成后，我们重启 IDE 就可以发现项目可以正常运行啦</p>\n<blockquote>\n<p>至此，我们已经可以正常地进行 Flutter 项目跨 Android 平台的开发了。最近开始慢慢学习 Flutter 和 Dart了，身上的担子越来越多，但我还是一如既往的懒。希望自己能坚持下去吧。</p>\n</blockquote>\n'}}}]);